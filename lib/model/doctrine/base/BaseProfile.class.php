<?php

/**
 * BaseProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sf_guard_user_id
 * @property string $facebook
 * @property string $twitter
 * @property string $mobile_phone
 * @property string $description
 * @property string $company
 * @property string $function
 * @property string $website
 * @property string $avatar
 * @property sfGuardUser $User
 * 
 * @method integer     getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method string      getFacebook()         Returns the current record's "facebook" value
 * @method string      getTwitter()          Returns the current record's "twitter" value
 * @method string      getMobilePhone()      Returns the current record's "mobile_phone" value
 * @method string      getDescription()      Returns the current record's "description" value
 * @method string      getCompany()          Returns the current record's "company" value
 * @method string      getFunction()         Returns the current record's "function" value
 * @method string      getWebsite()          Returns the current record's "website" value
 * @method string      getAvatar()           Returns the current record's "avatar" value
 * @method sfGuardUser getUser()             Returns the current record's "User" value
 * @method Profile     setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method Profile     setFacebook()         Sets the current record's "facebook" value
 * @method Profile     setTwitter()          Sets the current record's "twitter" value
 * @method Profile     setMobilePhone()      Sets the current record's "mobile_phone" value
 * @method Profile     setDescription()      Sets the current record's "description" value
 * @method Profile     setCompany()          Sets the current record's "company" value
 * @method Profile     setFunction()         Sets the current record's "function" value
 * @method Profile     setWebsite()          Sets the current record's "website" value
 * @method Profile     setAvatar()           Sets the current record's "avatar" value
 * @method Profile     setUser()             Sets the current record's "User" value
 * 
 * @package    aperosymfony
 * @subpackage model
 * @author     Benjamin Laugueux <b.laugueux@yzalis.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profile');
        $this->hasColumn('sf_guard_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('facebook', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('twitter', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('mobile_phone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('company', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('function', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('avatar', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collation', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id'));
    }
}